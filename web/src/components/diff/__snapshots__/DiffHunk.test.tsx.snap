// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DiffHunk renders a unified diff view for the given diff hunk 1`] = `
<DiffHunk
  decorations={
    Object {
      "base": Map {},
      "head": Map {},
    }
  }
  fileDiffAnchor="anchor_"
  history="[History]"
  hunk={
    Object {
      "highlight": Object {
        "__typename": "HighlightedDiffHunkBody",
        "aborted": false,
        "lines": Array [
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        const subscriptions = new Subscription()",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        const decorationType = sourcegraph.app.createDecorationType()",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        const connection = await createConnection()",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        logger.log(\`WebSocket connection to TypeScript backend opened\`)",
            "kind": "DELETED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        logger.log(\`WebSocket connection to language server opened\`)",
            "kind": "ADDED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        subscriptions.add(",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "                connection.observeNotification(LogMessageNotification.type).subscribe(({ type, message }) => {",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "                    const method = LSP_TO_LOG_LEVEL[type]",
            "kind": "UNCHANGED",
          },
        ],
      },
      "newRange": Object {
        "lines": 7,
        "startLine": 159,
      },
      "oldNoNewlineAt": false,
      "oldRange": Object {
        "lines": 7,
        "startLine": 159,
      },
      "section": "export async function register({",
    }
  }
  isLightTheme={true}
  lineNumbers={true}
  location="[Location path=/testdiff]"
>
  <DiffBoundary
    contentClassName="diff-hunk__content"
    highlight={
      Object {
        "__typename": "HighlightedDiffHunkBody",
        "aborted": false,
        "lines": Array [
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        const subscriptions = new Subscription()",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        const decorationType = sourcegraph.app.createDecorationType()",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        const connection = await createConnection()",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        logger.log(\`WebSocket connection to TypeScript backend opened\`)",
            "kind": "DELETED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        logger.log(\`WebSocket connection to language server opened\`)",
            "kind": "ADDED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        subscriptions.add(",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "                connection.observeNotification(LogMessageNotification.type).subscribe(({ type, message }) => {",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "                    const method = LSP_TO_LOG_LEVEL[type]",
            "kind": "UNCHANGED",
          },
        ],
      }
    }
    lineNumberClassName="diff-hunk__num--both"
    lineNumbers={true}
    newRange={
      Object {
        "lines": 7,
        "startLine": 159,
      }
    }
    oldNoNewlineAt={false}
    oldRange={
      Object {
        "lines": 7,
        "startLine": 159,
      }
    }
    section="export async function register({"
  >
    <tr
      className="diff-boundary"
    >
      <td
        className="diff-boundary__num diff-hunk__num--both"
        colSpan={2}
      />
      <td
        className="diff-boundary__content diff-hunk__content"
      >
        <code>
          @@ -
          159
          ,
          7
           +
          159
          ,
          7
           
          @@ export async function register({
        </code>
      </td>
    </tr>
  </DiffBoundary>
  <tr
    className="diff-hunk__line diff-hunk__line--both   "
    key="0"
  >
    <td
      className="diff-hunk__num"
      data-line={159}
      data-part="base"
      id="anchor_L159"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__num"
      data-line={159}
      data-part="head"
      id="anchor_R159"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__content"
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        const subscriptions = new Subscription()",
          }
        }
      />
    </td>
  </tr>
  <tr
    className="diff-hunk__line diff-hunk__line--both   "
    key="1"
  >
    <td
      className="diff-hunk__num"
      data-line={160}
      data-part="base"
      id="anchor_L160"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__num"
      data-line={160}
      data-part="head"
      id="anchor_R160"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__content"
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        const decorationType = sourcegraph.app.createDecorationType()",
          }
        }
      />
    </td>
  </tr>
  <tr
    className="diff-hunk__line diff-hunk__line--both   "
    key="2"
  >
    <td
      className="diff-hunk__num"
      data-line={161}
      data-part="base"
      id="anchor_L161"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__num"
      data-line={161}
      data-part="head"
      id="anchor_R161"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__content"
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        const connection = await createConnection()",
          }
        }
      />
    </td>
  </tr>
  <tr
    className="diff-hunk__line  diff-hunk__line--deletion  "
    key="3"
  >
    <td
      className="diff-hunk__num"
      data-line={162}
      data-part="base"
      id="anchor_L162"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__num diff-hunk__num--empty"
    />
    <td
      className="diff-hunk__content"
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        logger.log(\`WebSocket connection to TypeScript backend opened\`)",
          }
        }
      />
    </td>
  </tr>
  <tr
    className="diff-hunk__line   diff-hunk__line--addition "
    key="4"
  >
    <td
      className="diff-hunk__num diff-hunk__num--empty"
    />
    <td
      className="diff-hunk__num"
      data-line={162}
      data-part="head"
      id="anchor_R162"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__content"
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        logger.log(\`WebSocket connection to language server opened\`)",
          }
        }
      />
    </td>
  </tr>
  <tr
    className="diff-hunk__line diff-hunk__line--both   "
    key="5"
  >
    <td
      className="diff-hunk__num"
      data-line={163}
      data-part="base"
      id="anchor_L163"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__num"
      data-line={163}
      data-part="head"
      id="anchor_R163"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__content"
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        subscriptions.add(",
          }
        }
      />
    </td>
  </tr>
  <tr
    className="diff-hunk__line diff-hunk__line--both   "
    key="6"
  >
    <td
      className="diff-hunk__num"
      data-line={164}
      data-part="base"
      id="anchor_L164"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__num"
      data-line={164}
      data-part="head"
      id="anchor_R164"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__content"
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "                connection.observeNotification(LogMessageNotification.type).subscribe(({ type, message }) => {",
          }
        }
      />
    </td>
  </tr>
  <tr
    className="diff-hunk__line diff-hunk__line--both   "
    key="7"
  >
    <td
      className="diff-hunk__num"
      data-line={165}
      data-part="base"
      id="anchor_L165"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__num"
      data-line={165}
      data-part="head"
      id="anchor_R165"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__content"
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "                    const method = LSP_TO_LOG_LEVEL[type]",
          }
        }
      />
    </td>
  </tr>
</DiffHunk>
`;

exports[`DiffHunk renders dark theme decorations if dark theme is active 1`] = `
<DiffHunk
  decorations={
    Object {
      "base": Map {
        162 => Array [
          Object {
            "after": Object {
              "backgroundColor": "black",
              "contentText": "base content",
              "hoverMessage": "base hover msg",
            },
            "backgroundColor": "blue",
            "dark": Object {
              "border": "1px blue solid",
            },
            "isWholeLine": true,
            "range": Object {
              "end": Object {
                "character": 0,
                "line": 161,
              },
              "start": Object {
                "character": 0,
                "line": 161,
              },
            },
          },
        ],
      },
      "head": Map {
        159 => Array [
          Object {
            "after": Object {
              "backgroundColor": "black",
              "contentText": "head content",
              "hoverMessage": "base hover msg",
            },
            "backgroundColor": "red",
            "dark": Object {
              "border": "1px blue solid",
            },
            "isWholeLine": true,
            "range": Object {
              "end": Object {
                "character": 0,
                "line": 158,
              },
              "start": Object {
                "character": 0,
                "line": 158,
              },
            },
          },
        ],
      },
    }
  }
  fileDiffAnchor="anchor_"
  history="[History]"
  hunk={
    Object {
      "highlight": Object {
        "__typename": "HighlightedDiffHunkBody",
        "aborted": false,
        "lines": Array [
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        const subscriptions = new Subscription()",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        const decorationType = sourcegraph.app.createDecorationType()",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        const connection = await createConnection()",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        logger.log(\`WebSocket connection to TypeScript backend opened\`)",
            "kind": "DELETED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        logger.log(\`WebSocket connection to language server opened\`)",
            "kind": "ADDED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        subscriptions.add(",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "                connection.observeNotification(LogMessageNotification.type).subscribe(({ type, message }) => {",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "                    const method = LSP_TO_LOG_LEVEL[type]",
            "kind": "UNCHANGED",
          },
        ],
      },
      "newRange": Object {
        "lines": 7,
        "startLine": 159,
      },
      "oldNoNewlineAt": false,
      "oldRange": Object {
        "lines": 7,
        "startLine": 159,
      },
      "section": "export async function register({",
    }
  }
  isLightTheme={false}
  lineNumbers={true}
  location="[Location path=/testdiff]"
>
  <DiffBoundary
    contentClassName="diff-hunk__content"
    highlight={
      Object {
        "__typename": "HighlightedDiffHunkBody",
        "aborted": false,
        "lines": Array [
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        const subscriptions = new Subscription()",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        const decorationType = sourcegraph.app.createDecorationType()",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        const connection = await createConnection()",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        logger.log(\`WebSocket connection to TypeScript backend opened\`)",
            "kind": "DELETED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        logger.log(\`WebSocket connection to language server opened\`)",
            "kind": "ADDED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        subscriptions.add(",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "                connection.observeNotification(LogMessageNotification.type).subscribe(({ type, message }) => {",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "                    const method = LSP_TO_LOG_LEVEL[type]",
            "kind": "UNCHANGED",
          },
        ],
      }
    }
    lineNumberClassName="diff-hunk__num--both"
    lineNumbers={true}
    newRange={
      Object {
        "lines": 7,
        "startLine": 159,
      }
    }
    oldNoNewlineAt={false}
    oldRange={
      Object {
        "lines": 7,
        "startLine": 159,
      }
    }
    section="export async function register({"
  >
    <tr
      className="diff-boundary"
    >
      <td
        className="diff-boundary__num diff-hunk__num--both"
        colSpan={2}
      />
      <td
        className="diff-boundary__content diff-hunk__content"
      >
        <code>
          @@ -
          159
          ,
          7
           +
          159
          ,
          7
           
          @@ export async function register({
        </code>
      </td>
    </tr>
  </DiffBoundary>
  <tr
    className="diff-hunk__line diff-hunk__line--both   "
    key="0"
  >
    <td
      className="diff-hunk__num"
      data-line={159}
      data-part="base"
      id="anchor_L159"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__num"
      data-line={159}
      data-part="head"
      id="anchor_R159"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__content"
      style={
        Object {
          "backgroundColor": "red",
          "border": "1px blue solid",
        }
      }
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        const subscriptions = new Subscription()",
          }
        }
      />
       
      <LinkOrSpan
        data-tooltip="base hover msg"
        style={
          Object {
            "backgroundColor": "black",
          }
        }
      >
        <span
          className=""
          data-tooltip="base hover msg"
          style={
            Object {
              "backgroundColor": "black",
            }
          }
        >
          head content
        </span>
      </LinkOrSpan>
    </td>
  </tr>
  <tr
    className="diff-hunk__line diff-hunk__line--both   "
    key="1"
  >
    <td
      className="diff-hunk__num"
      data-line={160}
      data-part="base"
      id="anchor_L160"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__num"
      data-line={160}
      data-part="head"
      id="anchor_R160"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__content"
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        const decorationType = sourcegraph.app.createDecorationType()",
          }
        }
      />
    </td>
  </tr>
  <tr
    className="diff-hunk__line diff-hunk__line--both   "
    key="2"
  >
    <td
      className="diff-hunk__num"
      data-line={161}
      data-part="base"
      id="anchor_L161"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__num"
      data-line={161}
      data-part="head"
      id="anchor_R161"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__content"
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        const connection = await createConnection()",
          }
        }
      />
    </td>
  </tr>
  <tr
    className="diff-hunk__line  diff-hunk__line--deletion  "
    key="3"
  >
    <td
      className="diff-hunk__num"
      data-line={162}
      data-part="base"
      id="anchor_L162"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__num diff-hunk__num--empty"
    />
    <td
      className="diff-hunk__content"
      style={
        Object {
          "backgroundColor": "blue",
          "border": "1px blue solid",
        }
      }
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        logger.log(\`WebSocket connection to TypeScript backend opened\`)",
          }
        }
      />
       
      <LinkOrSpan
        data-tooltip="base hover msg"
        style={
          Object {
            "backgroundColor": "black",
          }
        }
      >
        <span
          className=""
          data-tooltip="base hover msg"
          style={
            Object {
              "backgroundColor": "black",
            }
          }
        >
          base content
        </span>
      </LinkOrSpan>
    </td>
  </tr>
  <tr
    className="diff-hunk__line   diff-hunk__line--addition "
    key="4"
  >
    <td
      className="diff-hunk__num diff-hunk__num--empty"
    />
    <td
      className="diff-hunk__num"
      data-line={162}
      data-part="head"
      id="anchor_R162"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__content"
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        logger.log(\`WebSocket connection to language server opened\`)",
          }
        }
      />
    </td>
  </tr>
  <tr
    className="diff-hunk__line diff-hunk__line--both   "
    key="5"
  >
    <td
      className="diff-hunk__num"
      data-line={163}
      data-part="base"
      id="anchor_L163"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__num"
      data-line={163}
      data-part="head"
      id="anchor_R163"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__content"
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        subscriptions.add(",
          }
        }
      />
    </td>
  </tr>
  <tr
    className="diff-hunk__line diff-hunk__line--both   "
    key="6"
  >
    <td
      className="diff-hunk__num"
      data-line={164}
      data-part="base"
      id="anchor_L164"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__num"
      data-line={164}
      data-part="head"
      id="anchor_R164"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__content"
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "                connection.observeNotification(LogMessageNotification.type).subscribe(({ type, message }) => {",
          }
        }
      />
    </td>
  </tr>
  <tr
    className="diff-hunk__line diff-hunk__line--both   "
    key="7"
  >
    <td
      className="diff-hunk__num"
      data-line={165}
      data-part="base"
      id="anchor_L165"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__num"
      data-line={165}
      data-part="head"
      id="anchor_R165"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__content"
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "                    const method = LSP_TO_LOG_LEVEL[type]",
          }
        }
      />
    </td>
  </tr>
</DiffHunk>
`;

exports[`DiffHunk renders decorations if given 1`] = `
<DiffHunk
  decorations={
    Object {
      "base": Map {
        162 => Array [
          Object {
            "after": Object {
              "backgroundColor": "black",
              "contentText": "base content",
              "hoverMessage": "base hover msg",
            },
            "backgroundColor": "blue",
            "dark": Object {
              "border": "1px blue solid",
            },
            "isWholeLine": true,
            "range": Object {
              "end": Object {
                "character": 0,
                "line": 161,
              },
              "start": Object {
                "character": 0,
                "line": 161,
              },
            },
          },
        ],
      },
      "head": Map {
        159 => Array [
          Object {
            "after": Object {
              "backgroundColor": "black",
              "contentText": "head content",
              "hoverMessage": "base hover msg",
            },
            "backgroundColor": "red",
            "dark": Object {
              "border": "1px blue solid",
            },
            "isWholeLine": true,
            "range": Object {
              "end": Object {
                "character": 0,
                "line": 158,
              },
              "start": Object {
                "character": 0,
                "line": 158,
              },
            },
          },
        ],
      },
    }
  }
  fileDiffAnchor="anchor_"
  history="[History]"
  hunk={
    Object {
      "highlight": Object {
        "__typename": "HighlightedDiffHunkBody",
        "aborted": false,
        "lines": Array [
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        const subscriptions = new Subscription()",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        const decorationType = sourcegraph.app.createDecorationType()",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        const connection = await createConnection()",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        logger.log(\`WebSocket connection to TypeScript backend opened\`)",
            "kind": "DELETED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        logger.log(\`WebSocket connection to language server opened\`)",
            "kind": "ADDED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        subscriptions.add(",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "                connection.observeNotification(LogMessageNotification.type).subscribe(({ type, message }) => {",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "                    const method = LSP_TO_LOG_LEVEL[type]",
            "kind": "UNCHANGED",
          },
        ],
      },
      "newRange": Object {
        "lines": 7,
        "startLine": 159,
      },
      "oldNoNewlineAt": false,
      "oldRange": Object {
        "lines": 7,
        "startLine": 159,
      },
      "section": "export async function register({",
    }
  }
  isLightTheme={true}
  lineNumbers={true}
  location="[Location path=/testdiff]"
>
  <DiffBoundary
    contentClassName="diff-hunk__content"
    highlight={
      Object {
        "__typename": "HighlightedDiffHunkBody",
        "aborted": false,
        "lines": Array [
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        const subscriptions = new Subscription()",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        const decorationType = sourcegraph.app.createDecorationType()",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        const connection = await createConnection()",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        logger.log(\`WebSocket connection to TypeScript backend opened\`)",
            "kind": "DELETED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        logger.log(\`WebSocket connection to language server opened\`)",
            "kind": "ADDED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "        subscriptions.add(",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "                connection.observeNotification(LogMessageNotification.type).subscribe(({ type, message }) => {",
            "kind": "UNCHANGED",
          },
          Object {
            "__typename": "HighlightedDiffHunkLine",
            "html": "                    const method = LSP_TO_LOG_LEVEL[type]",
            "kind": "UNCHANGED",
          },
        ],
      }
    }
    lineNumberClassName="diff-hunk__num--both"
    lineNumbers={true}
    newRange={
      Object {
        "lines": 7,
        "startLine": 159,
      }
    }
    oldNoNewlineAt={false}
    oldRange={
      Object {
        "lines": 7,
        "startLine": 159,
      }
    }
    section="export async function register({"
  >
    <tr
      className="diff-boundary"
    >
      <td
        className="diff-boundary__num diff-hunk__num--both"
        colSpan={2}
      />
      <td
        className="diff-boundary__content diff-hunk__content"
      >
        <code>
          @@ -
          159
          ,
          7
           +
          159
          ,
          7
           
          @@ export async function register({
        </code>
      </td>
    </tr>
  </DiffBoundary>
  <tr
    className="diff-hunk__line diff-hunk__line--both   "
    key="0"
  >
    <td
      className="diff-hunk__num"
      data-line={159}
      data-part="base"
      id="anchor_L159"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__num"
      data-line={159}
      data-part="head"
      id="anchor_R159"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__content"
      style={
        Object {
          "backgroundColor": "red",
        }
      }
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        const subscriptions = new Subscription()",
          }
        }
      />
       
      <LinkOrSpan
        data-tooltip="base hover msg"
        style={
          Object {
            "backgroundColor": "black",
          }
        }
      >
        <span
          className=""
          data-tooltip="base hover msg"
          style={
            Object {
              "backgroundColor": "black",
            }
          }
        >
          head content
        </span>
      </LinkOrSpan>
    </td>
  </tr>
  <tr
    className="diff-hunk__line diff-hunk__line--both   "
    key="1"
  >
    <td
      className="diff-hunk__num"
      data-line={160}
      data-part="base"
      id="anchor_L160"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__num"
      data-line={160}
      data-part="head"
      id="anchor_R160"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__content"
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        const decorationType = sourcegraph.app.createDecorationType()",
          }
        }
      />
    </td>
  </tr>
  <tr
    className="diff-hunk__line diff-hunk__line--both   "
    key="2"
  >
    <td
      className="diff-hunk__num"
      data-line={161}
      data-part="base"
      id="anchor_L161"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__num"
      data-line={161}
      data-part="head"
      id="anchor_R161"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__content"
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        const connection = await createConnection()",
          }
        }
      />
    </td>
  </tr>
  <tr
    className="diff-hunk__line  diff-hunk__line--deletion  "
    key="3"
  >
    <td
      className="diff-hunk__num"
      data-line={162}
      data-part="base"
      id="anchor_L162"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__num diff-hunk__num--empty"
    />
    <td
      className="diff-hunk__content"
      style={
        Object {
          "backgroundColor": "blue",
        }
      }
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        logger.log(\`WebSocket connection to TypeScript backend opened\`)",
          }
        }
      />
       
      <LinkOrSpan
        data-tooltip="base hover msg"
        style={
          Object {
            "backgroundColor": "black",
          }
        }
      >
        <span
          className=""
          data-tooltip="base hover msg"
          style={
            Object {
              "backgroundColor": "black",
            }
          }
        >
          base content
        </span>
      </LinkOrSpan>
    </td>
  </tr>
  <tr
    className="diff-hunk__line   diff-hunk__line--addition "
    key="4"
  >
    <td
      className="diff-hunk__num diff-hunk__num--empty"
    />
    <td
      className="diff-hunk__num"
      data-line={162}
      data-part="head"
      id="anchor_R162"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__content"
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        logger.log(\`WebSocket connection to language server opened\`)",
          }
        }
      />
    </td>
  </tr>
  <tr
    className="diff-hunk__line diff-hunk__line--both   "
    key="5"
  >
    <td
      className="diff-hunk__num"
      data-line={163}
      data-part="base"
      id="anchor_L163"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__num"
      data-line={163}
      data-part="head"
      id="anchor_R163"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__content"
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        subscriptions.add(",
          }
        }
      />
    </td>
  </tr>
  <tr
    className="diff-hunk__line diff-hunk__line--both   "
    key="6"
  >
    <td
      className="diff-hunk__num"
      data-line={164}
      data-part="base"
      id="anchor_L164"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__num"
      data-line={164}
      data-part="head"
      id="anchor_R164"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__content"
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "                connection.observeNotification(LogMessageNotification.type).subscribe(({ type, message }) => {",
          }
        }
      />
    </td>
  </tr>
  <tr
    className="diff-hunk__line diff-hunk__line--both   "
    key="7"
  >
    <td
      className="diff-hunk__num"
      data-line={165}
      data-part="base"
      id="anchor_L165"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__num"
      data-line={165}
      data-part="head"
      id="anchor_R165"
      onClick={[Function]}
    />
    <td
      className="diff-hunk__content"
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "                    const method = LSP_TO_LOG_LEVEL[type]",
          }
        }
      />
    </td>
  </tr>
</DiffHunk>
`;
